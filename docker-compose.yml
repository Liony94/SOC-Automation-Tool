version: '3.8'

services:
  crowdsec:
    image: crowdsecurity/crowdsec:latest
    volumes:
      - ./crowdsec/config:/etc/crowdsec
      - ./crowdsec/data:/var/lib/crowdsec/data
    environment:
      - COLLECTIONS=crowdsecurity/linux
      - CUSTOM_HOSTNAME=security-automation
    ports:
      - "8080:8080"

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - ABUSEIPDB_API_KEY=${ABUSEIPDB_API_KEY}
      - CROWDSEC_API_KEY=${CROWDSEC_API_KEY}
      - CROWDSEC_API_URL=http://crowdsec:8080/v1
    volumes:
      - ./:/app
    depends_on:
      - crowdsec
      - db

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  discord_bot:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: python -m src.bot.discord_bot
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - ABUSEIPDB_API_KEY=${ABUSEIPDB_API_KEY}
      - CROWDSEC_API_KEY=${CROWDSEC_API_KEY}
      - CROWDSEC_API_URL=http://crowdsec:8080/v1
      - DISCORD_ALERT_CHANNEL_ID=${DISCORD_ALERT_CHANNEL_ID}
    depends_on:
      - api

volumes:
  postgres_data:
